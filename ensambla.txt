COPY:    START  0
FIRST:   STL    RETADR
         LDB    LENGTH
         HIO
CLOOP:
PRINT_AX PROC
         MOV AH, 09h
         MOV DX, OFFSET mensaje
         INT 21h
         MOV CX, 4
         MOV BX, 10
         MOV SI, OFFSET resultado
PRINT_LOOP:
          XOR DX, DX
         DIV BX
         ADD DL, '0'
         MOV [SI], DL
         INC SI
         LOOP PRINT_LOOP
         MOV AH, 09h
         MOV DX, OFFSET RES
         INT 21h
         RET
PRINT_AX ENDP
         MOV c, AX
         MOV b, AX
         MOV a, AX
         MOV AX, a
         CMP AX, 0
         JE 9
         MOV AX, a
         MOV a, AX
         MOV AX, a
         MOV BX, a
         ADD AX, BX
         MOV a, AX
         CALL PRINT_AX
ENDFIL:
         LDA    EOF
         STA    BUFFER
         LDA    3
         STA    LENGTH
         JSUB	WRREC
         J    RETADR
EOF:	BYTE	C’CAE’
RETADR:	RESW	8
LENGTH:	RESW	4
BUFFER:	RESB	8192
EXIT:	STX	    LENGTH
         RSUB